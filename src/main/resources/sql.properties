#SQLStudents
sql.students.get.all=SELECT * FROM university.students
sql.students.get.byId=SELECT * FROM university.students WHERE student_id = ?
sql.students.delete=DELETE FROM university.students WHERE student_id = ?
sql.students.update=UPDATE university.students SET student_name = ?, student_lastname = ?, group_id = ? WHERE student_id = ?
sql.students.create=INSERT INTO university.students (student_name, student_lastname) VALUES (? , ?)
sql.students.remove.studentFromCourse=DELETE FROM university.students_courses WHERE student_id = ? AND course_id = ?
sql.students.add.studentToCourse=INSERT INTO university.students_courses (student_id, course_id) VALUES (? , ?)
sql.students.get.studentsPerCourseName=SELECT students.student_id, students.group_id, students.student_name, student_lastname FROM university.students LEFT JOIN university.students_courses ON students_courses.student_id = students.student_id LEFT JOIN university.courses ON courses.course_id = students_courses.course_id WHERE courses.course_name = ?
#
#SQLGroups
sql.groups.get.all=SELECT * FROM university.groups
sql.groups.get.byId=SELECT * FROM university.groups WHERE group_id = ?
sql.groups.delete=DELETE FROM university.groups WHERE group_id = ?
sql.groups.update=UPDATE university.groups SET group_name = ? WHERE group_id = ?
sql.groups.create=INSERT INTO university.groups (group_name) VALUES (?)
sql.groups.get.withLessOrEqualsStudentCount=SELECT st.group_id, gr.group_name, COUNT(st.group_id) studentscount FROM university.students st LEFT JOIN university.groups gr ON st.group_id = gr.group_id GROUP BY st.group_id, gr.group_name HAVING COUNT(st.group_id) <= ? AND st.group_id IS NOT NULL
#
#SQLCourses
sql.courses.get.all=SELECT * FROM university.courses
sql.courses.get.byId=SELECT * FROM university.courses WHERE course_id = ?
sql.courses.delete=DELETE FROM university.courses WHERE course_id = ?
sql.courses.update=UPDATE university.courses SET course_name = ?, course_description = ? WHERE course_id = ?
sql.courses.create=INSERT INTO university.courses (course_name, course_description) VALUES (?, ?)
#
#SQLLecturers
sql.lecturers.get.all=SELECT * FROM university.lecturers
sql.lecturers.get.byId=SELECT * FROM university.lecturers WHERE lecturer_id = ?
sql.lecturers.delete=DELETE FROM university.lecturers WHERE lecturer_id = ?
sql.lecturers.update=UPDATE university.lecturers SET lecturer_name = ?, lecturer_lastname = ? WHERE lecturer_id = ?
sql.lecturers.create=INSERT INTO university.lecturers (lecturer_name, lecturer_lastname) VALUES (? , ?)
#Scripts
sql.script.create.tables=CREATE SCHEMA IF NOT EXISTS school;\r\nSET SCHEMA school;\r\nDROP TABLE IF EXISTS university.students CASCADE;\r\nCREATE TABLE university.students\r\n(\r\n    student_id serial NOT NULL,\r\n    group_id integer,\r\n    first_name character varying(255) NOT NULL,\r\n    last_name character varying(255) NOT NULL,\r\n    CONSTRAINT students_pkey PRIMARY KEY (student_id)\r\n);\r\nDROP TABLE IF EXISTS university.courses CASCADE;\r\nCREATE TABLE university.courses\r\n(\r\n    course_id serial NOT NULL,\r\n    course_name character varying(255) NOT NULL,\r\n    course_description character varying(255),\r\n    CONSTRAINT courses_pkey PRIMARY KEY (course_id)\r\n);\r\nDROP TABLE IF EXISTS university.groups CASCADE;\r\nCREATE TABLE university.groups\r\n(\r\n    group_id serial NOT NULL,\r\n    group_name character varying(255) NOT NULL,\r\n    CONSTRAINT groups_pkey PRIMARY KEY (group_id)\r\n);\r\nDROP TABLE IF EXISTS university.students_courses CASCADE;\r\nCREATE TABLE university.students_courses\r\n(\r\nstudent_id integer NOT NULL,\r\ncourse_id integer NOT NULL,\r\nFOREIGN KEY (student_id) REFERENCES university.students (student_id) ON DELETE CASCADE ON UPDATE CASCADE,\r\nFOREIGN KEY (course_id) REFERENCES university.courses (course_id) ON DELETE CASCADE ON UPDATE CASCADE,\r\nCONSTRAINT students_courses_pkey PRIMARY KEY (student_id, course_id));\r\n
sql.script.wipe.tables=DELETE FROM university.students;\r\nDELETE FROM university.groups;\r\nDELETE FROM university.courses;\r\nDELETE FROM university.students_courses;\r\n